{"mappings":"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","sources":["<anon>","src/scripts/app.js"],"sourcesContent":["/* eslint-disable no-console */ var slider = document.querySelector(\"#gallery-list\");\nvar slides = Array.from(document.querySelectorAll(\".gallery__item\"));\nvar sliderWidth = document.querySelector(\".gallery__slider\").offsetWidth;\nvar dotsContainer = document.querySelector(\".slider__dots\");\nvar orderIndex = 0;\nvar currentTranslate = 0;\nvar startPosition = 0;\nvar endPosition = 0;\n// offset within which the slide will not change\nvar misstep = 50;\nvar positionsDifference = 0;\nvar isDragging = false;\nvar gapSmall = 16;\nvar gapBig = 20;\nvar tabletMinWidth = 768;\nvar desktopMinWidth = 1280;\nvar numberOfSlides = slides.length;\nvar isMobileScreen = window.innerWidth < tabletMinWidth;\nvar isDesktopScreen = window.innerWidth >= desktopMinWidth;\nvar currentPadding = isMobileScreen ? gapSmall : gapBig;\nvar slideWidth = sliderWidth + currentPadding;\nvar maxTranslate = -(numberOfSlides - 1) * slideWidth;\nwindow.addEventListener(\"resize\", function() {\n    if (window.innerWidth >= desktopMinWidth) {\n        slider.classList.add(\"gallery__list\");\n        slider.classList.remove(\"gallery__slider\", \"slider\");\n        slider.removeEventListener(\"touchstart\", touchStart);\n        slider.removeEventListener(\"touchend\", touchEnd);\n        slider.removeEventListener(\"touchmove\", touchMove);\n        slider.removeAttribute(\"style\");\n    } else {\n        slider.classList.remove(\"gallery__list\");\n        slider.classList.add(\"gallery__slider\", \"slider\");\n        currentPadding = window.innerWidth < tabletMinWidth ? gapSmall : gapBig;\n        sliderWidth = document.querySelector(\".gallery__slider\").offsetWidth;\n        slideWidth = sliderWidth + currentPadding;\n        maxTranslate = -(numberOfSlides - 1) * slideWidth;\n        slider.addEventListener(\"touchstart\", touchStart, {\n            passive: true\n        });\n        slider.addEventListener(\"touchend\", touchEnd, {\n            passive: true\n        });\n        slider.addEventListener(\"touchmove\", touchMove, {\n            passive: true\n        });\n    }\n});\nif (isDesktopScreen) {\n    slider.classList.add(\"gallery__list\");\n    slider.classList.remove(\"gallery__slider\", \"slider\");\n} else {\n    slider.addEventListener(\"touchstart\", touchStart, {\n        passive: true\n    });\n    slider.addEventListener(\"touchend\", touchEnd, {\n        passive: true\n    });\n    slider.addEventListener(\"touchmove\", touchMove, {\n        passive: true\n    });\n}\n// create slider control buttons (dots)\nslides.forEach(function(item, index) {\n    var btn = document.createElement(\"button\");\n    btn.addEventListener(\"click\", function() {\n        orderIndex = index;\n        setDotClasses();\n        setSliderPosition();\n    });\n    btn.classList.add(\"slider__dot\");\n    if (orderIndex === index) btn.classList.add(\"slider__dot--active\");\n    dotsContainer.appendChild(btn);\n});\nfunction setDotClasses() {\n    var btns = Array.from(document.querySelectorAll(\".slider__dot\"));\n    btns.forEach(function(item, index) {\n        if (orderIndex === index) item.classList.add(\"slider__dot--active\");\n        if (orderIndex !== index) item.classList.remove(\"slider__dot--active\");\n    });\n}\nfunction getPositionX(event) {\n    return event.type.includes(\"mouse\") ? event.pageX : event.touches[0].clientX;\n}\nfunction setSliderPosition() {\n    if (positionsDifference > 0 && currentTranslate !== maxTranslate) {\n        orderIndex++;\n        positionsDifference = 0;\n    }\n    if (positionsDifference < 0 && currentTranslate !== 0) {\n        orderIndex--;\n        positionsDifference = 0;\n    }\n    currentTranslate = -slideWidth * orderIndex;\n    setDotClasses();\n    slider.style.transform = \"translateX(\".concat(currentTranslate, \"px)\");\n}\nfunction touchStart(event) {\n    isDragging = true;\n    startPosition = getPositionX(event);\n}\nfunction touchMove(event) {\n    if (isDragging) endPosition = getPositionX(event);\n}\nfunction touchEnd(event) {\n    positionsDifference = startPosition - endPosition;\n    if (positionsDifference < misstep && positionsDifference > -misstep) return;\n    setSliderPosition();\n    isDragging = false;\n}\n\n//# sourceMappingURL=index.f8eb05a8.js.map\n","/* eslint-disable no-console */\nconst slider = document.querySelector('#gallery-list');\nconst slides = Array.from(document.querySelectorAll('.gallery__item'));\nlet sliderWidth = document.querySelector('.gallery__slider').offsetWidth;\nconst dotsContainer = document.querySelector('.slider__dots');\n\nlet orderIndex = 0;\nlet currentTranslate = 0;\nlet startPosition = 0;\nlet endPosition = 0;\n// offset within which the slide will not change\nconst misstep = 50;\nlet positionsDifference = 0;\nlet isDragging = false;\n\nconst gapSmall = 16;\nconst gapBig = 20;\nconst tabletMinWidth = 768;\nconst desktopMinWidth = 1280;\n\nconst numberOfSlides = slides.length;\nconst isMobileScreen = window.innerWidth < tabletMinWidth;\nconst isDesktopScreen = window.innerWidth >= desktopMinWidth;\nlet currentPadding = isMobileScreen ? gapSmall : gapBig;\nlet slideWidth = sliderWidth + currentPadding;\nlet maxTranslate = -(numberOfSlides - 1) * slideWidth;\n\nwindow.addEventListener('resize', () => {\n  if (window.innerWidth >= desktopMinWidth) {\n    slider.classList.add('gallery__list');\n    slider.classList.remove('gallery__slider', 'slider');\n    slider.removeEventListener('touchstart', touchStart);\n    slider.removeEventListener('touchend', touchEnd);\n    slider.removeEventListener('touchmove', touchMove);\n    slider.removeAttribute('style');\n  } else {\n    slider.classList.remove('gallery__list');\n    slider.classList.add('gallery__slider', 'slider');\n    currentPadding = window.innerWidth < tabletMinWidth ? gapSmall : gapBig;\n    sliderWidth = document.querySelector('.gallery__slider').offsetWidth;\n    slideWidth = sliderWidth + currentPadding;\n    maxTranslate = -(numberOfSlides - 1) * slideWidth;\n    slider.addEventListener('touchstart', touchStart, { passive: true });\n    slider.addEventListener('touchend', touchEnd, { passive: true });\n    slider.addEventListener('touchmove', touchMove, { passive: true });\n  }\n});\n\nif (isDesktopScreen) {\n  slider.classList.add('gallery__list');\n  slider.classList.remove('gallery__slider', 'slider');\n} else {\n  slider.addEventListener('touchstart', touchStart, { passive: true });\n  slider.addEventListener('touchend', touchEnd, { passive: true });\n  slider.addEventListener('touchmove', touchMove, { passive: true });\n}\n\n// create slider control buttons (dots)\nslides.forEach((item, index) => {\n  const btn = document.createElement('button');\n\n  btn.addEventListener('click', () => {\n    orderIndex = index;\n\n    setDotClasses();\n    setSliderPosition();\n  });\n\n  btn.classList.add('slider__dot');\n\n  if (orderIndex === index) {\n    btn.classList.add('slider__dot--active');\n  }\n\n  dotsContainer.appendChild(btn);\n});\n\nfunction setDotClasses() {\n  const btns = Array.from(document.querySelectorAll('.slider__dot'));\n\n  btns.forEach((item, index) => {\n    if (orderIndex === index) {\n      item.classList.add('slider__dot--active');\n    }\n\n    if (orderIndex !== index) {\n      item.classList.remove('slider__dot--active');\n    }\n  });\n}\n\nfunction getPositionX(event) {\n  return event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;\n}\n\nfunction setSliderPosition() {\n  if (positionsDifference > 0 && currentTranslate !== maxTranslate) {\n    orderIndex++;\n    positionsDifference = 0;\n  }\n\n  if (positionsDifference < 0 && currentTranslate !== 0) {\n    orderIndex--;\n    positionsDifference = 0;\n  }\n\n  currentTranslate = -slideWidth * orderIndex;\n\n  setDotClasses();\n\n  slider.style.transform = `translateX(${currentTranslate}px)`;\n}\n\nfunction touchStart(event) {\n  isDragging = true;\n  startPosition = getPositionX(event);\n}\n\nfunction touchMove(event) {\n  if (isDragging) {\n    endPosition = getPositionX(event);\n  }\n}\n\nfunction touchEnd(event) {\n  positionsDifference = startPosition - endPosition;\n\n  if (positionsDifference < misstep && positionsDifference > -misstep) {\n    return;\n  }\n\n  setSliderPosition();\n  isDragging = false;\n}\n"],"names":["slider","document","querySelector","slides","Array","from","querySelectorAll","sliderWidth","offsetWidth","dotsContainer","orderIndex","currentTranslate","startPosition","endPosition","positionsDifference","isDragging","numberOfSlides","length","isMobileScreen","window","innerWidth","isDesktopScreen","currentPadding","slideWidth","maxTranslate","setDotClasses","btns","forEach","item","index","classList","add","remove","getPositionX","event","type","includes","pageX","touches","clientX","setSliderPosition","style","transform","concat","touchStart","touchMove","touchEnd","addEventListener","removeEventListener","removeAttribute","passive","btn","createElement","appendChild"],"version":3,"file":"index.f8eb05a8.js.map"}